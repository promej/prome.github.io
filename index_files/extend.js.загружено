//If you want to create a plugin (see at the bottom arround the line 50), you will have to add the below line
if(typeof RedactorPlugins == 'undefined') var RedactorPlugins = {};

!function($, window, document, undefined)
{
	var enableDemoPlugin = true; //if you don't want to enable the demo plugin (for test purpose), set it to false

	$(document).on('EditorInit', function(e, data){
	
		var editorFramework = data.editor,	//You can access the XenForo editor framework functions here
			config = data.config; 		//You can modify the XenForo editor config here

		var giphyButtonCallback = function(ed, ev)
		{
			/*If you want to open an overlay*/
			ed.saveSelection();

			//The getText function allows the text to be translated provided you reference it in the "editor_js_setup" template inside the "RELANG.xf" object
			var modalTitle = editorFramework.getText('st_giphy_title');
			
			//Ignore this
			if(typeof ev != undefined && $(ev.currentTarget).hasClass('redactor_btn_my_extra_btn_id')){
				modalTitle += '';
			}
			
			//Check the size of the window so we can open a better sized modal window
			var windowsize = $(window).width();
			if (windowsize < 445) {
				var stmodalsize = 350;
			}
			else
			{
				var stmodalsize = 600;
			}
	
			//Open the modal
      			ed.modalInit(modalTitle, { url: editorFramework.dialogUrl + '&dialog=giphy' }, stmodalsize, $.proxy(function()
      			{
      				//attempt to focus on the search box, doesn't always work, need to perfect this
      				$("giphysearch").load(function() {
      					$("giphysearch").focus();
      				});
      				
      					// The Search Button has been clicked or the Load More/less link has been clicked
	      				$('#searchButton').click(function(e, gact, goffset) {
        				e.preventDefault();

        				//now lets do some checks if we should load more, or go back
        				if(gact ==  'loadMore')
        				{
        					//just assign to the same variable - Can be cleaned up
        					var giphyoff = goffset;
        				}
        				else if (gact == 'loadLess')
        				{
        					//subtract our results per page from our last offset
        					var giphyoff = +goffset - +XenForo.giphyresults;
        				}
        				
        				//Now we need to check if Load more 
        				if(! giphyoff){
        					var giphyoff = 0;
        				}
        				
						//clear the results div
						$("#result").empty();

						//Get the search value and replace spaces with +
						var giphysearch = $("#giphysearch").val();
						giphysearch = giphysearch.replace(/\s+/g, '+');
						
						//Build out the result set table. I may have to find a way to template this later
						var giphyresults = '<table class="giphyresulttable"><tr>';
						//Run the search with the limit defined by admin (or user maybe)
						
						if(XenForo.gifyhttps == 1) 
						{
							var https = 'https';
							//make the https call (safe to do this for all, but some may choose not to do that.
						} 
						else 
						{
							var https = 'http';
							
						}
						
						if(gact == 'trending')
						{
							//Are we using a default search term?
							if(XenForo.stgiphynicheon == 1)
							{
								var giphysearch = XenForo.stgiphysearchterm;
								giphysearch = giphysearch.replace(/\s+/g, '+');
								var xhr = $.get(https+"://api.giphy.com/v1/gifs/search?q="+giphysearch+"&api_key="+XenForo.giphyapikey+"&limit="+XenForo.giphyresults+"&rating="+XenForo.stgiphyrating+"&offset="+giphyoff);
							}
							else
							{
								var xhr = $.get(https+"://api.giphy.com/v1/gifs/trending?api_key="+XenForo.giphyapikey+"&limit="+XenForo.giphyresults+"&rating="+XenForo.stgiphyrating);	
							}
						}
						else
						{
							var xhr = $.get(https+"://api.giphy.com/v1/gifs/search?q="+giphysearch+"&api_key="+XenForo.giphyapikey+"&limit="+XenForo.giphyresults+"&rating="+XenForo.stgiphyrating+"&offset="+giphyoff);
						}
						
							//We have made our call and grabbed the data	
							xhr.done(function (data) {  
								
								//Check if there are any results and print out a message if there are none
								if(data.pagination.count==0)
								{
									$("#result").append("<br><br>"+editorFramework.getText('st_no_results'));
								}

								var giphycount = 1;
								var totalgiphycount = 0;
								
								//iterate through the results and append them into the div, making them clickable to insert into Editor
								$.each(data.data, function () {
								
									//make a check so we can put in a TR instead of a TD and start a new row
								     if(giphycount == 3)
								     {
								     	giphyresults += "</tr><tr>";
								     	giphycount = 1;
								     }
								     
								     //Check the window size so we can decide to grab a smaller image if this is say a mobile device
								     // May turn this into an option
								     windowsize = $(window).width();
 									 if (windowsize < 445) 
 									 {
 									 	var giphythumb = this.images[XenForo.stgiphypreviewmobile].url;
 									 }
 									 else 
 									 {
 									 	//var testme = "this.images."+XenForo.stgiphypreview+".url";
 									 	var giphythumb = this.images[XenForo.stgiphypreview].url;
 									 }
 									 //store the image cell into our variable
									giphyresults += '<td class="giphytd"><img style="cursor:pointer;" src="' + giphythumb + '" id="' + this.images[XenForo.stgiphysize].url +'"></td>';
									giphycount++;
									totalgiphycount++;
								})
								
								//make a check on whether we have offset and pagination turned on (load more)
								if(XenForo.giphyoffset==1 && data.pagination.count != 0)
								{
									//make a count of the total giphy results so we know what our offset is
									totalgiphycount = +totalgiphycount + +giphyoff;
									
									//Check if we have an offset of more than 0, meaning we have loaded more, if so we should show the "go Back" link
									if(giphyoff > 0)
									{
										var giphyback = '<span class="loadlesslink"><a id="loadLess" style="cursor:pointer;" title="'+giphyoff+'">'+editorFramework.getText('st_goback')+'</a></span>';
									}
									else
									{
										var giphyback = '';
									}
									// Build the loadmore link
									var loadmore = '<input type="hidden" id="giphyoff" value="'+totalgiphycount+'" >'+giphyback+'<span class="loadmorelink"><a id="loadMore" style="cursor:pointer;" title="'+totalgiphycount+'">'+editorFramework.getText('st_loadmore')+'</a></span>';
								}
								
								giphyresults += '</tr></table>';
						 		
						 		//append our images to the modal
								 $("#result").append(giphyresults);
								 
								 //append our load more links to the modal
								 $("#result").append(loadmore);
			
								// Once the image is clicked/chosen, we need to get its URL, we use the id attribute to store the fixed_width image
								$('img').click(function(){
									var giphyimage = this.id;
									ed.restoreSelection();
									ed.execCommand('inserthtml', '[img]'+giphyimage+'[/img]');
									ed.modalClose();
								});
								
								//load more or load less was pressed, lets trigger a searchButton click event and parse in the data needed to go forward or back
								$('a').click(function(){
									$("#searchButton").trigger('click', [this.id, this.title]);
								});
							});
					});
      			}, ed));
		};
		
		var toggleBeneathDiv = function(ed, ev)
		{
      			var self = this,
				$giphys = ed.$box.find('.redactor_giphy');

			if ($giphys.length)
			{
				$giphys.slideToggle();
				return;
			}

			if (self.giphysPending)
			{
				return;
			}
			self.giphysPending = true;

			new XenForo.ExtLoader(self, function()
			{
				var giphysearchphrase = editorFramework.getText('st_searchphrase');
				var giphyresultarea = '<div class="giphyresultundertable" id="resultundertable"><div class="giphyRow"><div class="giphyCell" id="result"></div></div></div><div><img src="styles/default/Silvertails/Giphy/PoweredBy_Giphy.png"></div>';
				
				$giphys = $('<div class="redactor_giphy" id="redactor_giphy">').html('<span class="giphyContainer" id="giphyContainer"><input type="text" name="giphysearch" id="giphysearch" class="textCtrl autosize" size="50" placeholder="'+ giphysearchphrase +'"><button class="button" id="searchButton">Search</button></span>'+giphyresultarea);
			
				$giphys.hide();
				$giphys.on('click', '#searchButton', function(e,gact, goffset) {
					e.preventDefault();

					var giphyboxwidth = $("#ctrl_message_html").outerWidth();
					
					//now lets do some checks if we should load more, or go back
					if(gact ==  'loadMore')
					{
						//just assign to the same variable - Can be cleaned up
						var giphyoff = goffset;
					}
					else if (gact == 'loadLess')
					{
						//subtract our results per page from our last offset
						var giphyoff = +goffset - +XenForo.giphyresults;
					}
					
					//Now we need to check if Load more 
					if(! giphyoff){
						var giphyoff = 0;
					}
					
					//clear the results div
					$("#result").empty();
					
					$("#redactor_giphy").outerWidth(giphyboxwidth);
					
					$("#resultundertable").css("display", "inline-block");
					$("#resultundertable").outerWidth(giphyboxwidth);
					
					
					//the search button has been clicked build the search
					//Get the search value and replace spaces with +
					var giphysearch = $("#giphysearch").val();
					giphysearch = giphysearch.replace(/\s+/g, '+');
					
					//Go get giphy results
					if(XenForo.gifyhttps == 1) 
					{
						var https = 'https';
						//make the https call (safe to do this for all, but some may choose not to do that.
					} 
					else 
					{
						var https = 'http';
					}
					
					if(gact == 'trending')
					{
						//Are we using a default search term?
						if(XenForo.stgiphynicheon == 1)
						{
							var giphysearch = XenForo.stgiphysearchterm;
							giphysearch = giphysearch.replace(/\s+/g, '+');
							var xhr = $.get(https+"://api.giphy.com/v1/gifs/search?q="+giphysearch+"&api_key="+XenForo.giphyapikey+"&limit="+XenForo.giphyresults+"&rating="+XenForo.stgiphyrating+"&offset="+giphyoff);
						}
						else
						{
							var xhr = $.get(https+"://api.giphy.com/v1/gifs/trending?api_key="+XenForo.giphyapikey+"&limit="+XenForo.giphyresults+"&rating="+XenForo.stgiphyrating);	
						}
					}
					else
					{
						var xhr = $.get(https+"://api.giphy.com/v1/gifs/search?q="+giphysearch+"&api_key="+XenForo.giphyapikey+"&limit="+XenForo.giphyresults+"&rating="+XenForo.stgiphyrating+"&offset="+giphyoff);
					}
				
					//We have made our call and grabbed the data	
					xhr.done(function (data) {  
						
						//Check if there are any results and print out a message if there are none
						if(data.pagination.count==0)
						{
							$("#result").append("<br><br>"+editorFramework.getText('st_no_results'));
						}
			
						var totalgiphycount = 0;

						var giphyresult = "";
						 
						//iterate through the results and append them into the div, making them clickable to insert into Editor
						$.each(data.data, function () {
						
							windowsize = $(window).width();
							if (windowsize < 445) 
							{
								var giphythumb = this.images[XenForo.stgiphypreviewmobile].url;
							}
							else 
							{
								var giphythumb = this.images[XenForo.stgiphypreview].url;
							}
							
							var thegiphyid = this.images[XenForo.stgiphysize].url;
							giphyresult += '<img src="'+ giphythumb +'" id="'+ thegiphyid +'" style="cursor: pointer;">';
							totalgiphycount++;
						});
						
						
						//make a check on whether we have offset and pagination turned on (load more)
						if(XenForo.giphyoffset==1 && data.pagination.count != 0)
						{
							//make a count of the total giphy results so we know what our offset is
							totalgiphycount = +totalgiphycount + +giphyoff;
					
							//Check if we have an offset of more than 0, meaning we have loaded more, if so we should show the "go Back" link
							if(giphyoff > 0)
							{
								var giphyback = '<img src="styles/default/Silvertails/Giphy/left-arrow.png" id="loadLess" style="cursor:pointer;" title="'+giphyoff+'" class="loadLess">';
							}
							else
							{
								var giphyback = '';
							}
					
							// Build the loadmore link
							var loadmore = '<input type="hidden" id="giphyoff" value="'+totalgiphycount+'" >'+giphyback+'<img src="styles/default/Silvertails/Giphy/right-arrow.png" id="loadMore" style="cursor:pointer;" title="'+totalgiphycount+'" class="loadMore">';
						}
						
						$("#result").append(giphyresult);
						$("#result").append(loadmore);

						$giphys.on('click', '.loadMore', function(e) {
							//$("#loadMore").unbind("click");
							if (e.handled !== true) { //Checking for the event whether it has occurred or not.
        						e.handled = true; //
								$("#searchButton").trigger('click', [this.id, this.title]);
							}
							//$("#searchButton").unbind("click");
						})
						
						$giphys.on('click', '.loadLess', function(e) {
							if (e.handled !== true) { //Checking for the event whether it has occurred or not.
        						e.handled = true; //
								$("#searchButton").trigger('click', [this.id, this.title]);
							}
						})
						
						// Once the image is clicked/chosen, we need to get its URL, we use the id attribute to store the fixed_width image
						$('img').click(function(){
							if(this.id != 'loadLess' && this.id != 'loadMore')
							{
								var giphyimage = '[img]'+this.id+'[/img]';
							
								ed.execCommand('inserthtml', giphyimage);
								ed.focus
								$("#giphysearch").val('');
								
								$("#result").empty();
								$giphys.slideToggle();
							}
						});	
	
					});
				})
				ed.$box.append($giphys);
				$giphys.xfActivate();
				$giphys.slideToggle();
			});
		};

		/*Let's tweak the demo Bb Code button by registering the above callback*/
		if(typeof config.buttonsCustom != undefined && typeof config.buttonsCustom.custom_stgiphy != undefined){
			var stgiphyButton = config.buttonsCustom.custom_stgiphy;

			stgiphyButton.callback = giphyButtonCallback;
		}

		/***
		* For those who need to write a plugin, here's the optional code
		* If you don't need, just delete this part.
		* The plugin id here is "myPlugin"
		**/	
		RedactorPlugins.myPlugin = {
			init: function()
			{
				if(!enableDemoPlugin) return false;
			
				/**
				* If you want to listen an event
				***/
				this.$editor.on('keyup', $.proxy(function(e)
				{
					var html = this.$editor.html();
				}, this));

				/**
				* If you want to add programmatically a new extra button
				* Disclaimer: the Redactor adding button function doesn't update some elements in its objets,
				*             so it might be difficult for other developers to check if your button has been added or not
				***/
				var extraBtnId = 'stgiphy';
				
				this.addBtn(
					extraBtnId,						//id
					'Giphy',		//title
					this.extraBtnCallback					//callback when click
					// a fourth parameter can be used to build a dropdown (check the redactor source for this)
				);
				//Let's modify the added button to match the default html structure 
				this.extraBtnFormatLayout(extraBtnId);
			},
			extraBtnCallback: function(ed, ev)
			{
				//Let's plug this callback on the above callback "demoButtonCallback"
				if(XenForo.giphybeneath == 1)
				{
					toggleBeneathDiv(ed, ev);
					//check if we should immediately load trending
					if(XenForo.stgiphytrending == 1 || XenForo.stgiphynicheon == 1)
					{
						$("#searchButton").trigger('click', ['trending', 1]);
					}
				}
				else
				{
					giphyButtonCallback(ed, ev);
					//check if we should immediately load trending
					if(XenForo.stgiphytrending == 1 || XenForo.stgiphynicheon == 1)
					{
						$("#searchButton").trigger('click', ['trending', 1]);
					}
				}	
			},
			extraBtnFormatLayout: function(id)
			{
				var $toolbar = this.$toolbar,
					$extraBtn = $toolbar.find('.redactor_btn_' + id),
					$wrapper = $('<li class="redactor_btn_container_' + id + '">');

				$extraBtn
					// the button will be added to the last buttons group
					.appendTo($toolbar.find('> .redactor_btn_group:last > ul')) 
					// the button needs a wrapper to match the default html structure
					.wrap($wrapper);	
			}
		};
	
		if(typeof config.plugins === undefined || !$.isArray(config.plugins)){
			config.plugins = [];
		}
		
		config.plugins.push('myPlugin');
	});
}
(jQuery, this, document, 'undefined');